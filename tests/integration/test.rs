pub fn new_named_visible () -> NewNamedVisibleStmt { NewNamedVisibleStmt (crate :: client :: sync :: Stmt :: new ("INSERT INTO named (name, price, show) VALUES ($1, $2, true) RETURNING id ")) } pub struct NewNamedVisibleStmt (crate :: client :: sync :: Stmt) ; impl NewNamedVisibleStmt { pub fn bind < 'a , C : GenericClient , T1 : crate :: StringSql , > (& 'a mut self , client : & 'a mut C , name : & 'a T1 , price : & 'a Option < f64 > ,) -> IdQuery < 'a , C , super :: Id , 2 > { IdQuery { client , params : [name , price ,] , stmt : & mut self . 0 , extractor : | row | super :: Id { id : row . get (0) , } , mapper : | it | super :: Id :: from (it) , } } } impl < 'a , C : GenericClient , T1 : crate :: StringSql , > crate :: client :: sync :: Params < 'a , super :: NamedParams < T1 , > , Id Query < 'a , C , super :: Id , 2 > , C > for NewNamedVisibleStmt { fn params (& 'a mut self , client : & 'a mut C , params : & 'a super :: NamedParams < T1 , >) -> Id Query < 'a , C , super :: Id , 2 > { self . bind (client , & params . name , & params . price ,) } }
